#!/usr/bin/env node

var mongoose = require('mongoose');
var rp = require('request-promise');
var _ = require('lodash');
var bluebird = require('bluebird');
var mongose = require('mongoose');
var random = require('mongoose-random');
var async = require('async');

var db = require('../config/database.config');
var keys = require('../config/keys.config');

var Location = require('../models/location.model');
var Beer = require('../models/beer.model');

mongoose.Promise = bluebird;

// function importPage(nextPageToken) {
//   var deferred = Promise.pending();
//
//   var url = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=40.4417741,-80.014889&radius=49999&types=bar|restaurant&key=AIzaSyCc6bgPDQwipENlv1zfGE4X-FERtLhBWZk';
//   if (nextPageToken) {
//     url += '&pagetoken=' + nextPageToken;
//   }
//
//   console.log(url);
//
//   rp(url)
//     .then(function(bodyAsString) {
//       var body = JSON.parse(bodyAsString);
//
//       body.results.forEach(function(result) {
//         console.log('adding: ' + result.name);
//         new Location({
//           name: result.name,
//           location: [result.geometry.location.lat, result.geometry.location.lng],
//           links: {
//             google: result
//           }
//         }).save();
//       });
//
//       console.log(body);
//       deferred.resolve(body.next_page_token);
//     })
//     .catch(function(err) {
//       console.error(err);
//     });
//
//     return deferred.promise;
// }

// function saveOnePage(body) {
//   body.results.forEach(function(result) {
//     console.log('adding: ' + result.name);
//     new Location({
//       name: result.name,
//       location: [result.geometry.location.lat, result.geometry.location.lng],
//       links: {
//         google: result
//       }
//     }).save();
//   });
// }
//
// function importPages(remaining, nextPageToken) {
//   var url = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=40.4417741,-80.014889&radius=49999&types=bar|restaurant&key=AIzaSyCc6bgPDQwipENlv1zfGE4X-FERtLhBWZk';
//   if (nextPageToken) {
//     url += '&pagetoken=' + nextPageToken;
//   }
//
//   console.log(remaining, url);
//
//   // setTimeout(function() {
//     rp(url)
//       .then(function(bodyAsString) {
//         var body = JSON.parse(bodyAsString);
//
//         saveOnePage(body);
//
//         console.log(body);
//         if (remaining > 0 && body.next_page_token) {
//           importPages(remaining - 1, body.next_page_token);
//         } else {
//           console.log('all done');
//         }
//       })
//       .catch(function(err) {
//         console.error(err);
//       });
//   // }, 1000);
// }

function importPage(nextPageToken) {
  var url = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=40.4417741,-80.014889&radius=49999&types=bar|restaurant|night_club|bowling_alley|casino&key=AIzaSyCc6bgPDQwipENlv1zfGE4X-FERtLhBWZk';
  if (nextPageToken) {
    url += '&pagetoken=' + nextPageToken;
  }
  console.log(url);

  return rp(url)
    .then(function(bodyAsString) {
      var body = JSON.parse(bodyAsString);
      body.results.forEach(function(result) {
        console.log('adding: ' + result.name);

        Beer.findRandom().limit(10).exec(function(err, beers) {
          var beerIds = _.map(beers, function(beer) {
            return beer._id;
          });

          new Location({
            name: result.name,
            vicinity: result.vicinity,
            location: [result.geometry.location.lat, result.geometry.location.lng],
            links: {
              google: result
            },
            beers: beerIds
          }).save();
        });
      });
      // console.log(body);
      return body.next_page_token;
    })
    .catch(function(err) {
      console.error('woops mongo - probably a dup!');
    });
}

mongoose.connect(db.url, function(err) {
  if (err) {
    console.error('Could not connect to MongoDB!');
    console.log(err);
  } else {
    console.log('Connected to MongoDB');

    importPage()
      .delay(5000).then(function(next_page_token) {
        return importPage(next_page_token);
      })
      .delay(5000).then(function(next_page_token) {
        return importPage(next_page_token);
      })
      .delay(5000).then(function(next_page_token) {
        return importPage(next_page_token);
      })
      .delay(5000).then(function(next_page_token) {
        return importPage(next_page_token);
      })
      .delay(5000).then(function(next_page_token) {
        return importPage(next_page_token);
      });
  }
});
